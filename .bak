    /*
    BITARRAY_DECL(digest, 512);     
    bitarray_clear(digest); 

    if(!hmac_generate(digest)){
        fprintf(stderr, "hmac_generate has reported an error\n");
	return 1;
    }	    

    // xoring ciphertext with hamc
    BITARRAY_DECL(final_cipher, bitarray_size(ciphertext));     
    bitarray_clear(final_cipher); 

    BITARRAY_DECL(final_plain, bitarray_size(ciphertext));     
    bitarray_clear(final_plain); 

    for (int i = 0; i < ciphertext->size; i++){
	bitarray_append(final_cipher, (digest->data[i] ^ ciphertext->data[i]));
	fprintf(stderr, "%d:%d:%d", digest->data[i], ciphertext->data[i], final_cipher->data[i]);
	
	fprintf(stderr, "\n");	
	
	bitarray_append(final_plain, (digest->data[i] ^ final_cipher->data[i]));
	fprintf(stderr, "%d:%d:%d\n\n", digest->data[i], final_cipher->data[i], final_plain->data[i]);

    }
    
    fprintf(stderr, "\n\n");  

    for (int i = 0; i < ciphertext->size; i++){
	bitarray_append(final_plain, (digest->data[i] ^ final_cipher->data[i]));
	fprintf(stderr, "%d", final_plain->data[i]);
    }

    fprintf(stderr, "\n\n");  
    */

